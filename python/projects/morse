#!/usr/bin/env python3
from time import sleep #dot is one unit of time, dash is 3 units, gaps between dots and dashes = 1 unit, gaps between characters = 3 units, gaps between words = 7 units
import skilstak.colors as c
import lights
unit = 1
morse = {
        'a': '.-',
        'b': '-...',
        'c': '-.-.',
        'd': '-..',
        'e': '.',
        'f': '..-.',
        'g': '--.',
        'h': '....',
        'i': '..',
        'j': '.---',
        'k': '-.-',
        'l': '.-..',
        'm': '--',
        'n': '-.',
        'o': '---',
        'p': '.--.',
        'q': '--.-',
        'r': '.-.',
        's': '...',
        't': '-',
        'u': '..-',
        'v': '...-',
        'w': '.--',
        'x': '-..-',
        'y': '-.--',
        'z': '--..',
        '1': '.----',
        '2': '..---',
        '3': '...--',
        '4': '....-',
        '5': '.....',
        '6': '-....',
        '7': '--...',
        '8': '---..',
        '9': '----.',
        '0': '-----',
        ' ': '/'}
#spaces are gaps between characters, / means a gap between words
lightcode = {
            '.': '11',
            '-': '13',
            ' ': '02',
            '/': '06'}
#message = str(input(c.x + "Enter a message to be translated: " + c.r))

def returncode(msg):
    codemsg = ''
    for x in msg:
        if morse[x] == '/':
            codemsg = codemsg[:-1]
        codemsg += morse[x]
        if morse[x] != '/':
            codemsg += ' '
    return(codemsg)

def lighttest(msg):
    code = returncode(msg)
    for x in code:
        if lightcode[x][0] == "0":
            lights.change_light(0, c.b03)
            lights.update()
            sleep(int(lightcode[x][1])*unit)
        elif lightcode[x][0] == "1":
            lights.change_light(0, c.r)
            lights.update()
            sleep(int(lightcode[x][1])*unit)
            lights.change_light(0, c.b03)
            lights.update()
            sleep(unit)

def outputs(msg): #debug/troubleshooting
    code = returncode(msg)
    for x in code:
        if lightcode[x][0] == "0":
            print("off for" + lightcode[x][1] + "ticks")
        elif lightcode[x][0] == "1":
            print("on for" + lightcode[x][1] + "ticks")
lighttest("dk ms")
        
