#!/usr/bin/env python3
#simulation of a crop field

import sys
import random as r

seeds = [] #seedbank for planting
moisture, nutrients = 10, 10 #custom values for testing
squares = [] #raw farmland data, list of lists, each list represents one square of farmland
silo = []
time = 0 #in weeks? not sure

def buyseed(seedtype, amount): #adds seeds to seedbank
    for x in range(0, amount):
        seeds.append(seedtype)

def surveysoil(size, random): #adds natural moisture and nutrition value data for a custom sized field
    naturesquares = []
    if random == 1:
        for x in range(0, size):
            squares.append([r.randint(0, 10), r.randint(0, 10)]) #first value is moisture, second is nutrients in soil
    else:
        for x in range(0, size):
            squares.append([moisture, nutrients])

def plant(square, crop): #plants a crop of an unlocked type in a specified square
    if crop in seeds:
        seeds.remove(crop)
        squares[square-1].append(crop)
        squares[square-1].append(0)
    else:
        print('You do not currently have this seed, purchase it in the market!')

def growcrops(elapsedtime): #simulates crop growth after a certain amount of time
    for x in range(0, len(squares)):
        if len(squares[x]) == 4:
            squares[x][3] += ((squares[x][0] + squares[x][1])*r.randint(8, 12)*0.001*elapsedtime)
            if squares[x][3] > 1:
                squares[x][3] = 1
            if len(str(squares[x][3])) > 5:
                squares[x][3] = round(squares[x][3], 3)

def checkdone(): #analyzes farmland data to find mature crops
    growncrops = []
    for x in range(0, len(squares)):
        if len(squares[x]) == 4 and squares[x][3] == 1:
            growncrops.append(x+1)
    return(growncrops)

def harvest(): #harvests grown crops and stores them in silo
    readycrops = checkdone()
    for x in range(0, len(readycrops)):
        if len(silo) == 0:
            silo.append([squares[readycrops[x]-1][2], 1])
        else:  
            scan = 0 
            for y in range(0, len(silo)):
                if squares[readycrops[x]-1][2] == silo[y][0]:
                    silo[y][1] += 1
                    scan = 1
                    break
            if scan == 0:
                silo.append([squares[readycrops[x]-1][2], 1])

#the following code is used for testing the program
print("Welcome to the cropfield tester!")

inp = int(input("How many squares do you want the cropfield to be? ")) #this block used for creating field
inp2 = int(input("Random soil quality values? (0 or 1) "))
if inp2 == 0:
    moisture = int(input("moisture "))
    nutrients = int(input("nutrients "))
surveysoil(inp, inp2)

while True: #continuous simulation
    inp = input("function (buyseed, plant, growcrops, checkdone, harvest, checksilo) ")
    if inp == "buyseed":
        inp = input("Type ")
        inp2 = int(input("Amount "))
        buyseed(inp, inp2) 
    if inp == "plant":
        inp = int(input("Square "))
        inp2 = input("Type ")
        plant(inp, inp2)
    if inp == "growcrops":
        inp = int(input("elapsed weeks")) 
        growcrops(inp)
    if inp == "checkdone":
        print(checkdone())
    if inp == "harvest":
        harvest()
    if inp == "checksilo":
        print(silo)
